name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - main

jobs:
  build_and_test:
    if: github.event.pull_request.draft == false

    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ v5.8.1, v5.9.1, v5.10.1, v5.11.2, v5.12.1, v5.13.0, latest ]
    container: kitware/paraview-for-ci:${{ matrix.version }}

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: 'source'
        fetch-depth: 0
        lfs: 'false'

    - name: Setup Directories
      working-directory: ${{github.workspace}}
      run: mkdir build

    - name: Configure
      working-directory: ${{github.workspace}}/build
      run: cmake -DCMAKE_PREFIX_PATH=/opt/paraview/install/ -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release ../source

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --parallel 2

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: xvfb-run ctest -j 2 --output-on-failure || ctest -j 1 --rerun-failed -VV

  build_binary_compatible:
    if: github.event.pull_request.draft == false

    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ 5.10.1, 5.11.2, 5.12.1, 5.13.0, latest ]
    container: kitware/paraview_org-plugin-devel:${{ matrix.version }}

    steps:

    - name: Manual Checkout
      working-directory: ${{github.workspace}}
      run: git clone https://github.com/${{github.repository}} source

    - name: Setup Directories
      working-directory: ${{github.workspace}}
      run: mkdir build

    - name: Configure
      working-directory: ${{github.workspace}}/build
      run: |
        source /opt/rh/devtoolset-7/enable
        cmake -DCMAKE_PREFIX_PATH=/builds/gitlab-kitware-sciviz-ci/build/install/ -DCMAKE_BUILD_TYPE=Release ../source

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: |
        source /opt/rh/devtoolset-7/enable
        cmake --build . --parallel 2

    - name: Manual Upload Example # Replace with your own upload step
      if: github.ref == 'refs/heads/main'
      working-directory: ${{github.workspace}}
      env:
        DATA_TOKEN: ${{ secrets.DATA_TOKEN }}
      run: |
        zip -r artifacts.zip ./build
        FILESIZE=`stat -c %s artifacts.zip`
        TOKEN=`curl -X POST "https://data.kitware.com/api/v1/api_key/token?key=$DATA_TOKEN" -d "" | grep -oP '"token":\s*"\K[a-zA-Z0-9]*'`
        curl -X POST "https://data.kitware.com/api/v1/file?parentId=5a4f9fa08d777f5e872f8103&name=artifacts.zip&parentType=folder&size=$FILESIZE&mimeType=application/zip" --data-binary "@./artifacts.zip" --header "Girder-Token: $TOKEN" -v --header "Content-Type: application/zip"
