workflow:
   rules:
     - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == "master"
       when: always
     - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == "main"
       when: always
     - if: $CI_MERGE_REQUEST_ID
       when: always
     - when: never

stages:
  - build
  - test

.binary_latest:
  image: kitware/paraview_org-plugin-devel:latest
  variables:
    PARAVIEW_VERSION: "latest"
  rules:
    - if: $DISABLE_LATEST == "True"
      when: never
    - when: on_success

.binary_5_12:
  image: kitware/paraview_org-plugin-devel:5.12.0
  variables:
    PARAVIEW_VERSION: "5.12.0"
  rules:
    - if: $DISABLE_5_12 == "True"
      when: never
    - when: on_success

.binary_5_11:
  image: kitware/paraview_org-plugin-devel:5.11.2
  variables:
    PARAVIEW_VERSION: "5.11.2"
  rules:
    - if: $DISABLE_5_11 == "True"
      when: never
    - if: $DISABLE_V5110 == "True"
      when: never
    - when: on_success

.binary_5_10:
  image: kitware/paraview_org-plugin-devel:5.10.1
  variables:
    PARAVIEW_VERSION: "5.10.1"
  rules:
    - if: $DISABLE_5_10 == "True"
      when: never
    - if: $DISABLE_V5101 == "True"
      when: never
    - when: on_success

.build_binary_compatible:
  stage: build
  before_script:
    - source /opt/rh/devtoolset-7/enable
  script:
      # This is needed because the build of ParaView use some absolute path
    - ln -s /paraview/gitlab-kitware-sciviz-ci/ /builds/gitlab-kitware-sciviz-ci
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_PREFIX_PATH=/builds/gitlab-kitware-sciviz-ci/build/install/ -DCMAKE_BUILD_TYPE=Release ..
    - cmake --build . --parallel 2
  tags:
    - docker
    - linux-x86_64
    - paraview
  artifacts:
    expire_in: 1h
    when: always
    paths:
      - build/
  rules:
    - if: $DISABLE_BINARY == "True"
      when: never
    - when: on_success
  interruptible: true

.build_plugin:
  stage: build
  script:
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_PREFIX_PATH=/opt/paraview/install/ -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release ..
    - cmake --build . --parallel 2
  tags:
    - docker
    - linux-x86_64
    - paraview
  artifacts:
    expire_in: 1h
    when: always
    paths:
      - build/
  interruptible: true

.test_plugin:
  stage: test
  script:
    - cd build
    - xvfb-run ctest -j 2 --output-on-failure --no-tests=error || xvfb-run ctest -j 1 --rerun-failed --no-tests=error -VV
  tags:
    - docker
    - linux-x86_64
    - paraview
  artifacts:
    expire_in: 1h
    when: always
    paths:
      - build/
  interruptible: true

.latest:
  image: kitware/paraview-for-ci:latest
  variables:
    PARAVIEW_VERSION: "latest"
  rules:
    - if: $DISABLE_LATEST == "True"
      when: never
    - when: on_success

.v5_12:
  image: kitware/paraview-for-ci:v5.12.0
  variables:
    PARAVIEW_VERSION: "5.12.0"
  rules:
    - if: $DISABLE_5_12 == "True"
      when: never
    - when: on_success

.v5_11:
  image: kitware/paraview-for-ci:v5.11.2
  variables:
    PARAVIEW_VERSION: "5.11.2"
  rules:
    - if: $DISABLE_5_11 == "True"
      when: never
    - if: $DISABLE_V5110 == "True"
      when: never
    - when: on_success

.v5_10:
  image: kitware/paraview-for-ci:v5.10.1
  variables:
    PARAVIEW_VERSION: "5.10.1"
  rules:
    - if: $DISABLE_5_10 == "True"
      when: never
    - if: $DISABLE_V5101 == "True"
      when: never
    - when: on_success

.v5_9:
  image: kitware/paraview-for-ci:v5.9.1
  variables:
    PARAVIEW_VERSION: "5.9.1"
  rules:
    - if: $DISABLE_5_9 == "True"
      when: never
    - if: $DISABLE_V591 == "True"
      when: never
    - when: on_success

.v5_8:
  image: kitware/paraview-for-ci:v5.8.1
  variables:
    PARAVIEW_VERSION: "5.8.1"
  rules:
    - if: $DISABLE_5_8 == "True"
      when: never
    - if: $DISABLE_V581 == "True"
      when: never
    - when: on_success

build_binary_compatible_latest:
  extends:
    - .build_binary_compatible
    - .binary_latest

build_binary_compatible_5.12.0:
  extends:
    - .build_binary_compatible
    - .binary_5_12

build_binary_compatible_5.11.2:
  extends:
    - .build_binary_compatible
    - .binary_5_11

build_binary_compatible_5.10.1:
  extends:
    - .build_binary_compatible
    - .binary_5_10

build_plugin_latest:
  extends:
    - .build_plugin
    - .latest

test_plugin_latest:
  extends:
    - .test_plugin
    - .latest
  dependencies:
    - build_plugin_latest
  needs:
    - build_plugin_latest

build_plugin_v5.12.0:
  extends:
    - .build_plugin
    - .v5_12

test_plugin_v5.12.0:
  extends:
    - .test_plugin
    - .v5_12
  dependencies:
    - build_plugin_v5.12.0
  needs:
    - build_plugin_v5.12.0

build_plugin_v5.11.2:
  extends:
    - .build_plugin
    - .v5_11

test_plugin_v5.11.2:
  extends:
    - .test_plugin
    - .v5_11
  dependencies:
    - build_plugin_v5.11.2
  needs:
    - build_plugin_v5.11.2

build_plugin_v5.10.1:
  extends:
    - .build_plugin
    - .v5_10

test_plugin_v5.10.1:
  extends:
    - .test_plugin
    - .v5_10
  dependencies:
    - build_plugin_v5.10.1
  needs:
    - build_plugin_v5.10.1

build_plugin_v5.9.1:
  extends:
    - .build_plugin
    - .v5_9

test_plugin_v5.9.1:
  extends:
    - .test_plugin
    - .v5_9
  dependencies:
    - build_plugin_v5.9.1
  needs:
    - build_plugin_v5.9.1

build_plugin_v5.8.1:
  extends:
    - .build_plugin
    - .v5_8

test_plugin_v5.8.1:
  extends:
    - .test_plugin
    - .v5_8
  dependencies:
    - build_plugin_v5.8.1
  needs:
    - build_plugin_v5.8.1
